#include<iostream>
using namespace std;
void swap(int &a,int &b)
{
	int c=a;
	a=b;
	b=c;
}
void max_heapify(int a[],int i,int n)
{
	int l=2*i;
	int r=2*i+1;
	int largest=i;
	if(l<=n&&a[i]<a[l])
	{
		largest=l;
	}
	if(r<=n&&a[largest]<a[r])
	{
		largest=r;
	}
	if(i!=largest)
	{
		swap(a[i],a[largest]);
		max_heapify(a,largest,n);
	}
}
void build_max_heapify(int a[],int n)
{
	for(int i=n/2;i>0;i--)
	{
		max_heapify(a,i,n);
	} 
}
void heapifysort(int a[],int n)
{
	build_max_heapify(a,n);
	for(int i=n;i>0;i--)
	{
		swap(a[i],a[1]);
		max_heapify(a,1,--n);
	} 
/*	while(n>1)
	{
		build_max_heapify(a,n);
		swap(a[n--],a[1]);	
	}
	*/
}
int main()
{
	int a[11]={0,5,4,7,9,3,2,8,6,1,5};
	int N=10;
	heapifysort(a,N);
	for(int j=1;j<=N;j++)
	{
		cout<<a[j]<<" ";
	}
	return 0;
}